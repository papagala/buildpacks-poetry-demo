variables:
  PACK_VERSION: v0.34.0
  CACHE_IMAGE_NAME: cache-image
  IMAGE_TAG: $CI_COMMIT_TAG

stages: [build-components, build-deployment]

.docker-base:
  image: docker:latest
  tags: [cloud, docker, linux, amd64]
  before_script:
    - mkdir -p $HOME/.docker && echo ${DOCKER_AUTH_CONFIG} > ${HOME}/.docker/config.json
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  retry: 2 # due to GitLab unstability

build-image:
  stage: build-deployment
  extends: .docker-base
  timeout: 2 hours
  image: docker:latest
  services:
    - docker:dind
  tags: [linux, amd64, docker-socket, docker, on-prem]
  script:
    # Install pack CLI. 
    - wget https://github.com/buildpacks/pack/releases/download/${PACK_VERSION}/pack-${PACK_VERSION}-linux.tgz && tar -xvf pack-${PACK_VERSION}-linux.tgz && chmod +x pack && mv pack /usr/local/bin/
    # Dynamically fetch the project version from pyproject.toml
    - PACKAGE_VERSION=$(sed -n 's/^version = "\([^"]*\)"/\1/p' pyproject.toml)
    # Build the image using the pack CLI
    - >
      pack build
      "${CI_REGISTRY_IMAGE}:${PACKAGE_VERSION}"
      --builder paketobuildpacks/builder-jammy-base
      --cache-image "${CI_REGISTRY_IMAGE}:${CACHE_IMAGE_NAME}"
      --publish
      --env 'BP_CPYTHON_VERSION=3.10.*'
      --env POETRY_HTTP_BASIC_FOO_USERNAME=gitlab-ci-token
      --env POETRY_HTTP_BASIC_FOO_PASSWORD=$CI_JOB_TOKEN
      --env POETRY_REPOSITORIES_FOO_URL=${CI_API_V4_URL}/projects/362083/packages/pypi/simple/
  rules:
    - if: '$CI_MERGE_REQUEST_ID'
    - if: '$CI_COMMIT_BRANCH == "main"'